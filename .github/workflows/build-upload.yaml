name: Build & Upload (Android, iOS)    

on: 
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'prod'
        type: choice
        options:
          - dev
          - stg
          - prod

jobs:
  build:
    runs-on: self-hosted
    timeout-minutes: 20
    environment: ${{ github.event.inputs.environment || 'prod' }}
    env:
      DEPLOY_ENV: ${{ github.event.inputs.environment || 'prod' }}

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.29.0'
          # * Reminder: enable caching on GitHub-hosted runners, disable on self-hosted runners
          # cache: true
          # cache-key: "flutter-:os:-:channel:-:version:-arch:-:hash:"
          # cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:"
      - name: Run Flutter Doctor
        run: flutter doctor -v

      - name: Flutter Clean for the Project
        run: |
          flutter clean
          flutter pub get
      
      - name: Get dependencies using Melos
        run: |
          melos clean
          melos bs

      - name: Clean Gradle Cache
        run: |
          rm -rf ~/.gradle/caches
          rm -rf ~/.gradle/wrapper
          cd apps/geiger_toolbox/android
          ./gradlew --stop
          ./gradlew clean
        
      # Generate .env.<flavor> file as it is gitignored but needed for the build
      - name: Setup Dart Defines
        run: echo "${{ secrets.DART_DEFINES }}" | base64 --decode > .env.${{ env.DEPLOY_ENV}}
     
      # Write all the gitignored Firebase filtes that are needed for the build
      - name: Setup Firebase 
        env:
          FIREBASE_JSON: "${{ secrets.FIREBASE_JSON }}"
          FIREBASE_OPTIONS_DART: "${{ secrets.FIREBASE_OPTIONS_DART }}"
          GOOGLE_SERVICES_JSON: "${{ secrets.GOOGLE_SERVICES_JSON }}"
          GOOGLE_SERVICES_PLIST: "${{ secrets.GOOGLE_SERVICES_PLIST }}"
        run: |
          
          echo "$FIREBASE_OPTIONS_DART" | base64 --decode > apps/geiger_toolbox/lib/firebase_options_${{ env.DEPLOY_ENV }}.dart
          echo "$GOOGLE_SERVICES_JSON" | base64 --decode > apps/geiger_toolbox/android/app/src/${{ env.DEPLOY_ENV }}/google-services.json
          mkdir -p apps/geiger_toolbox/ios/flavors/${{ env.DEPLOY_ENV }}
          echo "$GOOGLE_SERVICES_PLIST" | base64 --decode > apps/geiger_toolbox/ios/flavors/${{ env.DEPLOY_ENV }}/GoogleService-Info.plist
          echo "$FIREBASE_JSON" | base64 --decode > apps/geiger_toolbox/firebase.json
          # Needed by the "flutterfire bundle-service-file" build phase in Xcode
          dart pub global activate flutterfire_cli 1.0.1 --overwrite
     
      - name: Build Android App
        run: flutter build appbundle --flavor ${{ env.DEPLOY_ENV }} -t apps/geiger_toolbox/lib/main_${{ env.DEPLOY_ENV }}.dart --dart-define-from-file=.env.${{ env.DEPLOY_ENV }}

